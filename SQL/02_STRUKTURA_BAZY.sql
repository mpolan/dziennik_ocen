-- ===================================
--        STRUKTURA BAZY DANYCH
-- ===================================

-- ===================================
--          TWORZENIE TABEL
-- ===================================

-- STUDENT
CREATE TABLE STUDENT (
    ID NUMBER PRIMARY KEY,
    IMIE VARCHAR2(100),
    NAZWISKO VARCHAR2(100),
    EMAIL VARCHAR2(100) UNIQUE,
    DATA_URODZENIA DATE
);

-- NAUCZYCIEL
CREATE TABLE NAUCZYCIEL (
    ID NUMBER PRIMARY KEY,
    IMIE VARCHAR2(100),
    NAZWISKO VARCHAR2(100),
    EMAIL VARCHAR2(100) UNIQUE,
    TYTUL_NAUKOWY VARCHAR2(100)
);

-- PRZEDMIOT
CREATE TABLE PRZEDMIOT (
    ID NUMBER PRIMARY KEY,
    NAZWA VARCHAR2(100),
    KOD VARCHAR2(20) UNIQUE,
    SEMESTR NUMBER,
    ECTS NUMBER
);

-- GRUPA
CREATE TABLE GRUPA (
    ID NUMBER PRIMARY KEY,
    NAZWA VARCHAR2(100),
    ROK_AKADEMICKI VARCHAR2(20)
);

-- UZYTKOWNIK
CREATE TABLE UZYTKOWNIK (
    ID NUMBER PRIMARY KEY,
    LOGIN VARCHAR2(50) UNIQUE,
    HASLO VARCHAR2(100),
    ROLA VARCHAR2(20)
);

-- ZAPISY
CREATE TABLE ZAPISY (
    ID NUMBER PRIMARY KEY,
    STUDENT_ID NUMBER NOT NULL,
    GRUPA_ID NUMBER NOT NULL,
    PRZEDMIOT_ID NUMBER NOT NULL,
    CONSTRAINT FK_ZAPISY_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT FK_ZAPISY_GRUPA FOREIGN KEY (GRUPA_ID) REFERENCES GRUPA(ID),
    CONSTRAINT FK_ZAPISY_PRZEDMIOT FOREIGN KEY (PRZEDMIOT_ID) REFERENCES PRZEDMIOT(ID)
);

-- OCENA
CREATE TABLE OCENA (
    ID NUMBER PRIMARY KEY,
    STUDENT_ID NUMBER NOT NULL,
    PRZEDMIOT_ID NUMBER NOT NULL,
    NAUCZYCIEL_ID NUMBER NOT NULL,
    WARTOSC NUMBER(4,2),
    TYP VARCHAR2(50),
    DATA_WYSTAWIENIA DATE,
    CONSTRAINT FK_OCENA_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT FK_OCENA_PRZEDMIOT FOREIGN KEY (PRZEDMIOT_ID) REFERENCES PRZEDMIOT(ID),
    CONSTRAINT FK_OCENA_NAUCZYCIEL FOREIGN KEY (NAUCZYCIEL_ID) REFERENCES NAUCZYCIEL(ID)
);

-- ZALICZENIE
CREATE TABLE ZALICZENIE (
    ID NUMBER PRIMARY KEY,
    STUDENT_ID NUMBER NOT NULL,
    PRZEDMIOT_ID NUMBER NOT NULL,
    STATUS VARCHAR2(20),
    DATA_ZALICZENIA DATE,
    CONSTRAINT FK_ZALICZENIE_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID),
    CONSTRAINT FK_ZALICZENIE_PRZEDMIOT FOREIGN KEY (PRZEDMIOT_ID) REFERENCES PRZEDMIOT(ID)
);

-- RANKING
CREATE TABLE RANKING (
    ID NUMBER PRIMARY KEY,
    STUDENT_ID NUMBER NOT NULL,
    SREDNIA NUMBER(4,2),
    POZYCJA NUMBER,
    SEMESTR NUMBER,
    CONSTRAINT FK_RANKING_STUDENT FOREIGN KEY (STUDENT_ID) REFERENCES STUDENT(ID)
);

-- HISTORIA_OCEN
CREATE TABLE HISTORIA_OCEN (
    ID NUMBER PRIMARY KEY,
    OCENA_ID NUMBER NOT NULL,
    STARA_WARTOSC NUMBER(4,2),
    NOWA_WARTOSC NUMBER(4,2),
    ZMIENIL_USER_ID NUMBER,
    DATA_ZMIANY TIMESTAMP,
    CONSTRAINT FK_HISTORIA_OCENA FOREIGN KEY (OCENA_ID) REFERENCES OCENA(ID),
    CONSTRAINT FK_HISTORIA_USER FOREIGN KEY (ZMIENIL_USER_ID) REFERENCES UZYTKOWNIK(ID)
);

-- LOG_ZMIAN
CREATE TABLE LOG_ZMIAN (
    ID NUMBER PRIMARY KEY,
    UZYTKOWNIK_ID NUMBER,
    AKCJA VARCHAR2(100),
    TABELA VARCHAR2(50),
    REKORD_ID NUMBER,
    DATA TIMESTAMP,
    CONSTRAINT FK_LOG_USER FOREIGN KEY (UZYTKOWNIK_ID) REFERENCES UZYTKOWNIK(ID)
);

-- Komentarze (Oracle)
COMMENT ON COLUMN OCENA.TYP IS 'np. kolokwium, egzamin, projekt';
COMMENT ON COLUMN ZALICZENIE.STATUS IS 'zaliczony, niezaliczony';
COMMENT ON COLUMN UZYTKOWNIK.ROLA IS 'ADMIN, NAUCZYCIEL, STUDENT';

COMMIT;
